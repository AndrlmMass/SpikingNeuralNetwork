NAME="student_name"

echo "My name is $NAME, and my username is $USER."
echo "I have logged on to Orion."
echo "This is my first BASH script" 
echo "THIS LINE SHOULD BE REMOVED"
# Specify cpu cores, system ram, gpu cores

# Navigate with BASH terminal

# Helpful shortcuts:

pwd: full path
ls: list files
cd: change directory
mkdir: create directory
cp: copy file or directory
mv: move file or directory
rm: remove file or directory
ssh: Open SSH connection
scp: copy files over SSH connections
~: home directory
.: working directory
..: parent directory
autocomplete: tab
copy: ctrl+shift+c
freecores: checks the available cores
squeque [<username>][-p gpu]: check which jobs are running (or planned to be run)
scancel [jobid]: cancel a specific job in queque
sbatch <slurm script>.sh: submit a job 

# I will need to provide a singularity 
# container that specifies the required 
# packages to run the script

Recipe for creating container:

Create definition file (<name>.def)

misc:

Scripts need to be in python to be run on Orion

EXAMPLE SCRIPT:

#!/bin/bash
#SBATCH --ntasks=16               # 1 core (CPU)
#SBATCH --nodes=1                 # Use 1 node
#SBATCH --job-name=FMB_U_net      # Name of job
#SBATCH --partition=gpu           # Use GPU partition
#SBATCH --gres=gpu:1              # Use one GPUs
#SBATCH --mem=64G                 # Default memory per CPU is 3GB
#SBATCH --output=./output_logs/1_u_net_8_filt_tiny_ll_%j.out # Stdout and stderr file

## Script commands
module load singularity

SIFFILE="/mnt/users/yosa/singularity_containers/u_net_tf/container_u_net_tf.sif"

PATH_TO_CODE='/mnt/users/yosa/u_net_fmb_tf'
PATH_TO_DATASET='/mnt/project/FMB'

## RUN THE PYTHON SCRIPT
# Using a singularity container named container_u_net.sif
singularity exec --nv $SIFFILE python 1_u_net_8_filt_tiny_ll.py

# Send this job into the slurm queue with the following command:
# >> sbatch 1_u_net_8_filt_tiny_ll_slurm.sh

Other tips:

Use a time module to measure how long it takes to run them. 

Add a model storage function to retrieve the results

